# Generated by Django 2.2.2 on 2020-01-13 02:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gateway', '0002_auto_20200113_1054'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post_Return',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_all_data', models.CharField(max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rcv_server_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=32)),
                ('received_time_data', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='别名')),
                ('sensor_id', models.CharField(max_length=32)),
                ('cHz', models.CharField(default='2', max_length=32)),
                ('gain', models.CharField(default='60', max_length=32)),
                ('avg_time', models.CharField(default='4', max_length=32)),
                ('Hz', models.CharField(default='2', max_length=32)),
                ('Sample_depth', models.CharField(default='2', max_length=32)),
                ('Sample_Hz', models.CharField(default='500', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Set_param',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_get_id', models.CharField(max_length=32)),
                ('param', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Set_Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, max_length=32, null=True)),
                ('month', models.CharField(blank=True, max_length=32, null=True)),
                ('day_of_week', models.CharField(blank=True, max_length=32, null=True)),
                ('day', models.CharField(blank=True, max_length=32, null=True)),
                ('hour', models.CharField(blank=True, max_length=32, null=True)),
                ('mins', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing_status', models.CharField(max_length=32)),
                ('cycle_status', models.CharField(max_length=32)),
                ('text_status', models.CharField(max_length=32)),
                ('button_status', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='URL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mainURL', models.URLField(blank=True, default='http://ling.2tag.cn/api/collect_data', null=True)),
                ('mainHD', models.CharField(blank=True, default={'Content-Type': 'application/json'}, max_length=32, null=True)),
                ('algURL', models.URLField(blank=True, default='http://118.24.12.152:8099/analyzer/b64', null=True)),
                ('algHD', models.CharField(blank=True, default={'Content-Type': 'application/json'}, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('role', models.ManyToManyField(blank=True, null=True, to='gateway.Role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GWData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_version', models.CharField(max_length=32)),
                ('sensor_id', models.CharField(max_length=32)),
                ('time_tamp', models.CharField(max_length=32)),
                ('temperature', models.IntegerField(blank=True, null=True)),
                ('gain', models.IntegerField()),
                ('battery', models.IntegerField()),
                ('data_len', models.IntegerField()),
                ('thickness', models.CharField(default='-999', max_length=16)),
                ('data', models.TextField()),
                ('alias', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gateway.Sensor_data')),
            ],
        ),
    ]
